// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.4.0
// source: proto/reservation.proto

package api

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Education int32

const (
	//高考统招本科
	Education_UNIFIED_BACHELOR Education = 0
	//非全日制本科
	Education_PART_TIME_BACHELOR Education = 1
	//专升本本科
	Education_TRANSFORMED_BACHELOR Education = 2
	//全日制硕士
	Education_FULL_TIME_MASTER Education = 3
	//非全日制硕士
	Education_PART_TIME_MASTER Education = 4
	//全日制博士
	Education_FULL_TIME_DOCTOR Education = 5
	//非全日制博士
	Education_PART_TIME_DOCTOR Education = 6
	//其他
	Education_OTHER Education = 7
)

// Enum value maps for Education.
var (
	Education_name = map[int32]string{
		0: "UNIFIED_BACHELOR",
		1: "PART_TIME_BACHELOR",
		2: "TRANSFORMED_BACHELOR",
		3: "FULL_TIME_MASTER",
		4: "PART_TIME_MASTER",
		5: "FULL_TIME_DOCTOR",
		6: "PART_TIME_DOCTOR",
		7: "OTHER",
	}
	Education_value = map[string]int32{
		"UNIFIED_BACHELOR":     0,
		"PART_TIME_BACHELOR":   1,
		"TRANSFORMED_BACHELOR": 2,
		"FULL_TIME_MASTER":     3,
		"PART_TIME_MASTER":     4,
		"FULL_TIME_DOCTOR":     5,
		"PART_TIME_DOCTOR":     6,
		"OTHER":                7,
	}
)

func (x Education) Enum() *Education {
	p := new(Education)
	*p = x
	return p
}

func (x Education) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Education) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_reservation_proto_enumTypes[0].Descriptor()
}

func (Education) Type() protoreflect.EnumType {
	return &file_proto_reservation_proto_enumTypes[0]
}

func (x Education) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Education.Descriptor instead.
func (Education) EnumDescriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{0}
}

//感情状态
type EmotionalStatus int32

const (
	//单身且无婚史
	EmotionalStatus_SINGLE_WITHOUT_MARRIAGE_HISTORY EmotionalStatus = 0
	//单身且离异
	EmotionalStatus_SINGLE_AND_DIVORCED EmotionalStatus = 1
)

// Enum value maps for EmotionalStatus.
var (
	EmotionalStatus_name = map[int32]string{
		0: "SINGLE_WITHOUT_MARRIAGE_HISTORY",
		1: "SINGLE_AND_DIVORCED",
	}
	EmotionalStatus_value = map[string]int32{
		"SINGLE_WITHOUT_MARRIAGE_HISTORY": 0,
		"SINGLE_AND_DIVORCED":             1,
	}
)

func (x EmotionalStatus) Enum() *EmotionalStatus {
	p := new(EmotionalStatus)
	*p = x
	return p
}

func (x EmotionalStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmotionalStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_reservation_proto_enumTypes[1].Descriptor()
}

func (EmotionalStatus) Type() protoreflect.EnumType {
	return &file_proto_reservation_proto_enumTypes[1]
}

func (x EmotionalStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EmotionalStatus.Descriptor instead.
func (EmotionalStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{1}
}

//性别
type Gender int32

const (
	//男性
	Gender_MALE Gender = 0
	//女性
	Gender_FEMALE Gender = 1
)

// Enum value maps for Gender.
var (
	Gender_name = map[int32]string{
		0: "MALE",
		1: "FEMALE",
	}
	Gender_value = map[string]int32{
		"MALE":   0,
		"FEMALE": 1,
	}
)

func (x Gender) Enum() *Gender {
	p := new(Gender)
	*p = x
	return p
}

func (x Gender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Gender) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_reservation_proto_enumTypes[2].Descriptor()
}

func (Gender) Type() protoreflect.EnumType {
	return &file_proto_reservation_proto_enumTypes[2]
}

func (x Gender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Gender.Descriptor instead.
func (Gender) EnumDescriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{2}
}

//用户编辑请求
type EditUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//用户ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 昵称
	HeadImage string `protobuf:"bytes,2,opt,name=headImage,proto3" json:"headImage,omitempty"`
	// 昵称
	NickName string `protobuf:"bytes,3,opt,name=nickName,proto3" json:"nickName,omitempty"`
	//性别
	Gender Gender `protobuf:"varint,4,opt,name=gender,proto3,enum=reservation.Gender" json:"gender,omitempty"`
	//身高
	Height int32 `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	//体重
	Weight int32 `protobuf:"varint,6,opt,name=weight,proto3" json:"weight,omitempty"`
	//家乡
	Hometown string `protobuf:"bytes,7,opt,name=hometown,proto3" json:"hometown,omitempty"`
	//所在地
	Location string `protobuf:"bytes,8,opt,name=location,proto3" json:"location,omitempty"`
	//感情状态
	EmotionalStatus EmotionalStatus `protobuf:"varint,9,opt,name=emotionalStatus,proto3,enum=reservation.EmotionalStatus" json:"emotionalStatus,omitempty"`
	//最高学历
	Education Education `protobuf:"varint,10,opt,name=education,proto3,enum=reservation.Education" json:"education,omitempty"`
	//毕业（在读）院校
	University string `protobuf:"bytes,11,opt,name=university,proto3" json:"university,omitempty"`
	//职业
	Occupation string `protobuf:"bytes,12,opt,name=Occupation,proto3" json:"Occupation,omitempty"`
	//公司
	Company string `protobuf:"bytes,13,opt,name=company,proto3" json:"company,omitempty"`
	//微信号
	WechatNumber string `protobuf:"bytes,14,opt,name=wechatNumber,proto3" json:"wechatNumber,omitempty"`
	//手机号
	PhoneNumber string `protobuf:"bytes,15,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
}

func (x *EditUserReq) Reset() {
	*x = EditUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditUserReq) ProtoMessage() {}

func (x *EditUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditUserReq.ProtoReflect.Descriptor instead.
func (*EditUserReq) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{0}
}

func (x *EditUserReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EditUserReq) GetHeadImage() string {
	if x != nil {
		return x.HeadImage
	}
	return ""
}

func (x *EditUserReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *EditUserReq) GetGender() Gender {
	if x != nil {
		return x.Gender
	}
	return Gender_MALE
}

func (x *EditUserReq) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *EditUserReq) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *EditUserReq) GetHometown() string {
	if x != nil {
		return x.Hometown
	}
	return ""
}

func (x *EditUserReq) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *EditUserReq) GetEmotionalStatus() EmotionalStatus {
	if x != nil {
		return x.EmotionalStatus
	}
	return EmotionalStatus_SINGLE_WITHOUT_MARRIAGE_HISTORY
}

func (x *EditUserReq) GetEducation() Education {
	if x != nil {
		return x.Education
	}
	return Education_UNIFIED_BACHELOR
}

func (x *EditUserReq) GetUniversity() string {
	if x != nil {
		return x.University
	}
	return ""
}

func (x *EditUserReq) GetOccupation() string {
	if x != nil {
		return x.Occupation
	}
	return ""
}

func (x *EditUserReq) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *EditUserReq) GetWechatNumber() string {
	if x != nil {
		return x.WechatNumber
	}
	return ""
}

func (x *EditUserReq) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

//用户编辑返回
type EditUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否成功编辑
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 错误码
	ErrorCode string `protobuf:"bytes,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	// 错误详情
	ErrorMsg string `protobuf:"bytes,3,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
}

func (x *EditUserResp) Reset() {
	*x = EditUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditUserResp) ProtoMessage() {}

func (x *EditUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditUserResp.ProtoReflect.Descriptor instead.
func (*EditUserResp) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{1}
}

func (x *EditUserResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *EditUserResp) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *EditUserResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

//参加活动请求
type JoinActivityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//活动id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *JoinActivityReq) Reset() {
	*x = JoinActivityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinActivityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinActivityReq) ProtoMessage() {}

func (x *JoinActivityReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinActivityReq.ProtoReflect.Descriptor instead.
func (*JoinActivityReq) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{2}
}

func (x *JoinActivityReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

//参加活动请求
type JoinActivityResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//活动价格
	Price float32 `protobuf:"fixed32,1,opt,name=price,proto3" json:"price,omitempty"`
	// 是否成功访问
	Success bool `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	// 错误码
	ErrorCode string `protobuf:"bytes,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	// 错误详情
	ErrorMsg string `protobuf:"bytes,4,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
}

func (x *JoinActivityResp) Reset() {
	*x = JoinActivityResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinActivityResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinActivityResp) ProtoMessage() {}

func (x *JoinActivityResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinActivityResp.ProtoReflect.Descriptor instead.
func (*JoinActivityResp) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{3}
}

func (x *JoinActivityResp) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *JoinActivityResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *JoinActivityResp) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *JoinActivityResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

//查询用户信息请求
type QueryUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryUserInfoReq) Reset() {
	*x = QueryUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserInfoReq) ProtoMessage() {}

func (x *QueryUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserInfoReq.ProtoReflect.Descriptor instead.
func (*QueryUserInfoReq) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{4}
}

//查询用户信息返回
type QueryUserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//用户数据
	Data *CompleteUserData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// 是否成功访问
	Success bool `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	// 错误码
	ErrorCode string `protobuf:"bytes,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	// 错误详情
	ErrorMsg string `protobuf:"bytes,4,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
}

func (x *QueryUserInfoResp) Reset() {
	*x = QueryUserInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserInfoResp) ProtoMessage() {}

func (x *QueryUserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserInfoResp.ProtoReflect.Descriptor instead.
func (*QueryUserInfoResp) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{5}
}

func (x *QueryUserInfoResp) GetData() *CompleteUserData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryUserInfoResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *QueryUserInfoResp) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *QueryUserInfoResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

//查询详情，包括应征、应征者、活动请求
type QueryDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryDetailsReq) Reset() {
	*x = QueryDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDetailsReq) ProtoMessage() {}

func (x *QueryDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDetailsReq.ProtoReflect.Descriptor instead.
func (*QueryDetailsReq) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{6}
}

//用户完整数据
type CompleteUserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User  *User  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Count *Count `protobuf:"bytes,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CompleteUserData) Reset() {
	*x = CompleteUserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteUserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteUserData) ProtoMessage() {}

func (x *CompleteUserData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteUserData.ProtoReflect.Descriptor instead.
func (*CompleteUserData) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{7}
}

func (x *CompleteUserData) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *CompleteUserData) GetCount() *Count {
	if x != nil {
		return x.Count
	}
	return nil
}

//查询详情，包括应征、应征者、活动返回
type QueryDetailsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//用户数据
	Data *Detail `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// 是否成功访问
	Success bool `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	// 错误码
	ErrorCode string `protobuf:"bytes,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	// 错误详情
	ErrorMsg string `protobuf:"bytes,4,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
}

func (x *QueryDetailsResp) Reset() {
	*x = QueryDetailsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDetailsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDetailsResp) ProtoMessage() {}

func (x *QueryDetailsResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDetailsResp.ProtoReflect.Descriptor instead.
func (*QueryDetailsResp) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{8}
}

func (x *QueryDetailsResp) GetData() *Detail {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryDetailsResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *QueryDetailsResp) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *QueryDetailsResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

//详情，包括应征、应征者、活动
type Detail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//活动
	Activities []*Activity `protobuf:"bytes,1,rep,name=activities,proto3" json:"activities,omitempty"`
	//应征
	Enlist []*User `protobuf:"bytes,2,rep,name=enlist,proto3" json:"enlist,omitempty"`
	//被应征
	Enlisted []*User `protobuf:"bytes,3,rep,name=enlisted,proto3" json:"enlisted,omitempty"`
}

func (x *Detail) Reset() {
	*x = Detail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Detail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Detail) ProtoMessage() {}

func (x *Detail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Detail.ProtoReflect.Descriptor instead.
func (*Detail) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{9}
}

func (x *Detail) GetActivities() []*Activity {
	if x != nil {
		return x.Activities
	}
	return nil
}

func (x *Detail) GetEnlist() []*User {
	if x != nil {
		return x.Enlist
	}
	return nil
}

func (x *Detail) GetEnlisted() []*User {
	if x != nil {
		return x.Enlisted
	}
	return nil
}

//查询活动详情请求
type QueryActivityInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//活动id
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryActivityInfoReq) Reset() {
	*x = QueryActivityInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryActivityInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryActivityInfoReq) ProtoMessage() {}

func (x *QueryActivityInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryActivityInfoReq.ProtoReflect.Descriptor instead.
func (*QueryActivityInfoReq) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{10}
}

func (x *QueryActivityInfoReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

//轮播图列表请求
type QuerySwipersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QuerySwipersReq) Reset() {
	*x = QuerySwipersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySwipersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySwipersReq) ProtoMessage() {}

func (x *QuerySwipersReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySwipersReq.ProtoReflect.Descriptor instead.
func (*QuerySwipersReq) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{11}
}

//轮播图列表返回
type QuerySwipersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//活动列表数据
	Data *QuerySwipersResp_Data `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// 是否成功访问
	Success bool `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	// 错误码
	ErrorCode string `protobuf:"bytes,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	// 错误详情
	ErrorMsg string `protobuf:"bytes,4,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
}

func (x *QuerySwipersResp) Reset() {
	*x = QuerySwipersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySwipersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySwipersResp) ProtoMessage() {}

func (x *QuerySwipersResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySwipersResp.ProtoReflect.Descriptor instead.
func (*QuerySwipersResp) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{12}
}

func (x *QuerySwipersResp) GetData() *QuerySwipersResp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QuerySwipersResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *QuerySwipersResp) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *QuerySwipersResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

type QueryActivityInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Activity `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// 是否成功访问
	Success bool `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	// 错误码
	ErrorCode string `protobuf:"bytes,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	// 错误详情
	ErrorMsg string `protobuf:"bytes,4,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
}

func (x *QueryActivityInfoResp) Reset() {
	*x = QueryActivityInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryActivityInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryActivityInfoResp) ProtoMessage() {}

func (x *QueryActivityInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryActivityInfoResp.ProtoReflect.Descriptor instead.
func (*QueryActivityInfoResp) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{13}
}

func (x *QueryActivityInfoResp) GetData() *Activity {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryActivityInfoResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *QueryActivityInfoResp) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *QueryActivityInfoResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

//查询MBTI请求
type QueryMBTIReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//用户UUID
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *QueryMBTIReq) Reset() {
	*x = QueryMBTIReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMBTIReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMBTIReq) ProtoMessage() {}

func (x *QueryMBTIReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMBTIReq.ProtoReflect.Descriptor instead.
func (*QueryMBTIReq) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{14}
}

func (x *QueryMBTIReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

//查询MBTI返回
type QueryMBTIResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//MBTI数据
	Data *MBTIResult `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// 是否成功注册
	Success bool `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	// 错误码
	ErrorCode string `protobuf:"bytes,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	// 错误详情
	ErrorMsg string `protobuf:"bytes,4,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
}

func (x *QueryMBTIResp) Reset() {
	*x = QueryMBTIResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMBTIResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMBTIResp) ProtoMessage() {}

func (x *QueryMBTIResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMBTIResp.ProtoReflect.Descriptor instead.
func (*QueryMBTIResp) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{15}
}

func (x *QueryMBTIResp) GetData() *MBTIResult {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryMBTIResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *QueryMBTIResp) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *QueryMBTIResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

type MBTIResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//注意力方向（精力来源），外倾
	Extraversion float32 `protobuf:"fixed32,1,opt,name=extraversion,proto3" json:"extraversion,omitempty"`
	//认知方式（如何搜集信息），实感
	Sensing float32 `protobuf:"fixed32,2,opt,name=sensing,proto3" json:"sensing,omitempty"`
	//判断方式（如何做决定），理智
	Thinking float32 `protobuf:"fixed32,3,opt,name=thinking,proto3" json:"thinking,omitempty"`
	//生活方式（如何应对外部世界），判断
	Judging float32 `protobuf:"fixed32,4,opt,name=judging,proto3" json:"judging,omitempty"`
}

func (x *MBTIResult) Reset() {
	*x = MBTIResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MBTIResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MBTIResult) ProtoMessage() {}

func (x *MBTIResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MBTIResult.ProtoReflect.Descriptor instead.
func (*MBTIResult) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{16}
}

func (x *MBTIResult) GetExtraversion() float32 {
	if x != nil {
		return x.Extraversion
	}
	return 0
}

func (x *MBTIResult) GetSensing() float32 {
	if x != nil {
		return x.Sensing
	}
	return 0
}

func (x *MBTIResult) GetThinking() float32 {
	if x != nil {
		return x.Thinking
	}
	return 0
}

func (x *MBTIResult) GetJudging() float32 {
	if x != nil {
		return x.Judging
	}
	return 0
}

type GenerateMBTIReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenerateMBTIReq) Reset() {
	*x = GenerateMBTIReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateMBTIReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateMBTIReq) ProtoMessage() {}

func (x *GenerateMBTIReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateMBTIReq.ProtoReflect.Descriptor instead.
func (*GenerateMBTIReq) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{17}
}

type GenerateMBTIResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenerateMBTIResp) Reset() {
	*x = GenerateMBTIResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateMBTIResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateMBTIResp) ProtoMessage() {}

func (x *GenerateMBTIResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateMBTIResp.ProtoReflect.Descriptor instead.
func (*GenerateMBTIResp) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{18}
}

type RegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterReq) Reset() {
	*x = RegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReq) ProtoMessage() {}

func (x *RegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReq.ProtoReflect.Descriptor instead.
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{19}
}

type RegisterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否成功注册
	Success bool `protobuf:"varint,8,opt,name=success,proto3" json:"success,omitempty"`
	// 错误码
	ErrorCode string `protobuf:"bytes,9,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	// 错误详情
	ErrorMsg string `protobuf:"bytes,10,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
}

func (x *RegisterResp) Reset() {
	*x = RegisterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResp) ProtoMessage() {}

func (x *RegisterResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResp.ProtoReflect.Descriptor instead.
func (*RegisterResp) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{20}
}

func (x *RegisterResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterResp) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *RegisterResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

//微信登录请求
type WXLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//登录时获取的 code，可通过wx.login获取
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	//云开发环境id
	EncryptedData string `protobuf:"bytes,2,opt,name=encryptedData,proto3" json:"encryptedData,omitempty"`
	//加密算法的初始向量
	Iv string `protobuf:"bytes,3,opt,name=iv,proto3" json:"iv,omitempty"`
}

func (x *WXLoginReq) Reset() {
	*x = WXLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WXLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WXLoginReq) ProtoMessage() {}

func (x *WXLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WXLoginReq.ProtoReflect.Descriptor instead.
func (*WXLoginReq) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{21}
}

func (x *WXLoginReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *WXLoginReq) GetEncryptedData() string {
	if x != nil {
		return x.EncryptedData
	}
	return ""
}

func (x *WXLoginReq) GetIv() string {
	if x != nil {
		return x.Iv
	}
	return ""
}

//微信登录返回
type WXLoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *WXLoginResp_Data `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// 是否成功访问
	Success bool `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	// 错误码
	ErrorCode string `protobuf:"bytes,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	// 错误详情
	ErrorMsg string `protobuf:"bytes,4,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
}

func (x *WXLoginResp) Reset() {
	*x = WXLoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WXLoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WXLoginResp) ProtoMessage() {}

func (x *WXLoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WXLoginResp.ProtoReflect.Descriptor instead.
func (*WXLoginResp) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{22}
}

func (x *WXLoginResp) GetData() *WXLoginResp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *WXLoginResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *WXLoginResp) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *WXLoginResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

type QueryOrderListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//用户的uuid
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *QueryOrderListReq) Reset() {
	*x = QueryOrderListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderListReq) ProtoMessage() {}

func (x *QueryOrderListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderListReq.ProtoReflect.Descriptor instead.
func (*QueryOrderListReq) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{23}
}

func (x *QueryOrderListReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type QueryOrderListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//活动列表数据
	Data *QueryOrderListResp_Data `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// 是否成功访问
	Success bool `protobuf:"varint,8,opt,name=success,proto3" json:"success,omitempty"`
	// 错误码
	ErrorCode string `protobuf:"bytes,9,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	// 错误详情
	ErrorMsg string `protobuf:"bytes,10,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
}

func (x *QueryOrderListResp) Reset() {
	*x = QueryOrderListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderListResp) ProtoMessage() {}

func (x *QueryOrderListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderListResp.ProtoReflect.Descriptor instead.
func (*QueryOrderListResp) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{24}
}

func (x *QueryOrderListResp) GetData() *QueryOrderListResp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryOrderListResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *QueryOrderListResp) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *QueryOrderListResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

// GetSystemInfoReq 表示获取系统信息请求.
type GetSystemInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSystemInfoReq) Reset() {
	*x = GetSystemInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemInfoReq) ProtoMessage() {}

func (x *GetSystemInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemInfoReq.ProtoReflect.Descriptor instead.
func (*GetSystemInfoReq) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{25}
}

// GetSystemInfoResp 表示获取系统信息响应.
type GetSystemInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 已使用磁盘空间总数, 单位兆字节.
	TotalUsedMb int64 `protobuf:"varint,1,opt,name=totalUsedMb,proto3" json:"totalUsedMb,omitempty"`
	// 磁盘空间容量总数, 单位兆字节.
	TotalMb int64 `protobuf:"varint,2,opt,name=totalMb,proto3" json:"totalMb,omitempty"`
	// 可用磁盘容量, 单位兆字节.
	AvailableMb int64 `protobuf:"varint,3,opt,name=availableMb,proto3" json:"availableMb,omitempty"`
	// 是否成功访问
	Success bool `protobuf:"varint,8,opt,name=success,proto3" json:"success,omitempty"`
	// 错误码
	ErrorCode string `protobuf:"bytes,9,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	// 错误详情
	ErrorMsg string `protobuf:"bytes,10,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
}

func (x *GetSystemInfoResp) Reset() {
	*x = GetSystemInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemInfoResp) ProtoMessage() {}

func (x *GetSystemInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemInfoResp.ProtoReflect.Descriptor instead.
func (*GetSystemInfoResp) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{26}
}

func (x *GetSystemInfoResp) GetTotalUsedMb() int64 {
	if x != nil {
		return x.TotalUsedMb
	}
	return 0
}

func (x *GetSystemInfoResp) GetTotalMb() int64 {
	if x != nil {
		return x.TotalMb
	}
	return 0
}

func (x *GetSystemInfoResp) GetAvailableMb() int64 {
	if x != nil {
		return x.AvailableMb
	}
	return 0
}

func (x *GetSystemInfoResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetSystemInfoResp) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *GetSystemInfoResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

// 获取某一天的可参加的活动列表请求
type QueryActivityListByDayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//日期，格式为 "20221226"
	Day string `protobuf:"bytes,1,opt,name=day,proto3" json:"day,omitempty"`
	// 本次请求结果实际页码, 一般与请求参数一致
	PageNum int32 `protobuf:"varint,2,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	// 分页大小
	PageSize int32 `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *QueryActivityListByDayReq) Reset() {
	*x = QueryActivityListByDayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryActivityListByDayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryActivityListByDayReq) ProtoMessage() {}

func (x *QueryActivityListByDayReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryActivityListByDayReq.ProtoReflect.Descriptor instead.
func (*QueryActivityListByDayReq) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{27}
}

func (x *QueryActivityListByDayReq) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

func (x *QueryActivityListByDayReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryActivityListByDayReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 获取某一天的可参加的活动列表返回
type QueryActivityListByDayResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//活动列表数据
	Data *QueryActivityListByDayResp_Data `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// 是否成功访问
	Success bool `protobuf:"varint,8,opt,name=success,proto3" json:"success,omitempty"`
	// 错误码
	ErrorCode string `protobuf:"bytes,9,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	// 错误详情
	ErrorMsg string `protobuf:"bytes,10,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
}

func (x *QueryActivityListByDayResp) Reset() {
	*x = QueryActivityListByDayResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryActivityListByDayResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryActivityListByDayResp) ProtoMessage() {}

func (x *QueryActivityListByDayResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryActivityListByDayResp.ProtoReflect.Descriptor instead.
func (*QueryActivityListByDayResp) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{28}
}

func (x *QueryActivityListByDayResp) GetData() *QueryActivityListByDayResp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryActivityListByDayResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *QueryActivityListByDayResp) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *QueryActivityListByDayResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

// 获取全部可参加的活动列表请求
type QueryActivityListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryActivityListReq) Reset() {
	*x = QueryActivityListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryActivityListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryActivityListReq) ProtoMessage() {}

func (x *QueryActivityListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryActivityListReq.ProtoReflect.Descriptor instead.
func (*QueryActivityListReq) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{29}
}

// 获取全部可参加的活动列表返回
type QueryActivityListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//活动列表数据
	Data *QueryActivityListResp_Data `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// 是否成功访问
	Success bool `protobuf:"varint,8,opt,name=success,proto3" json:"success,omitempty"`
	// 错误码
	ErrorCode string `protobuf:"bytes,9,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	// 错误详情
	ErrorMsg string `protobuf:"bytes,10,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
}

func (x *QueryActivityListResp) Reset() {
	*x = QueryActivityListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryActivityListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryActivityListResp) ProtoMessage() {}

func (x *QueryActivityListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryActivityListResp.ProtoReflect.Descriptor instead.
func (*QueryActivityListResp) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{30}
}

func (x *QueryActivityListResp) GetData() *QueryActivityListResp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryActivityListResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *QueryActivityListResp) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *QueryActivityListResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

//用户详情
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 活动ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 昵称
	HeadImage string `protobuf:"bytes,2,opt,name=headImage,proto3" json:"headImage,omitempty"`
	// 昵称
	NickName string `protobuf:"bytes,3,opt,name=nickName,proto3" json:"nickName,omitempty"`
	//出生日期
	BirthDate string `protobuf:"bytes,4,opt,name=birthDate,proto3" json:"birthDate,omitempty"`
	//性别
	Gender Gender `protobuf:"varint,5,opt,name=gender,proto3,enum=reservation.Gender" json:"gender,omitempty"`
	//身高
	Height int32 `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
	//体重
	Weight int32 `protobuf:"varint,7,opt,name=weight,proto3" json:"weight,omitempty"`
	//家乡
	Hometown string `protobuf:"bytes,8,opt,name=hometown,proto3" json:"hometown,omitempty"`
	//所在地
	Location string `protobuf:"bytes,9,opt,name=location,proto3" json:"location,omitempty"`
	//感情状态
	EmotionalStatus EmotionalStatus `protobuf:"varint,10,opt,name=emotionalStatus,proto3,enum=reservation.EmotionalStatus" json:"emotionalStatus,omitempty"`
	//最高学历
	Education Education `protobuf:"varint,11,opt,name=education,proto3,enum=reservation.Education" json:"education,omitempty"`
	//毕业（在读）院校
	University string `protobuf:"bytes,12,opt,name=university,proto3" json:"university,omitempty"`
	//公司
	Company string `protobuf:"bytes,13,opt,name=company,proto3" json:"company,omitempty"`
	//微信号
	WechatNumber string `protobuf:"bytes,14,opt,name=wechatNumber,proto3" json:"wechatNumber,omitempty"`
	//手机号
	PhoneNumber string `protobuf:"bytes,15,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{31}
}

func (x *User) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetHeadImage() string {
	if x != nil {
		return x.HeadImage
	}
	return ""
}

func (x *User) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *User) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *User) GetGender() Gender {
	if x != nil {
		return x.Gender
	}
	return Gender_MALE
}

func (x *User) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *User) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *User) GetHometown() string {
	if x != nil {
		return x.Hometown
	}
	return ""
}

func (x *User) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *User) GetEmotionalStatus() EmotionalStatus {
	if x != nil {
		return x.EmotionalStatus
	}
	return EmotionalStatus_SINGLE_WITHOUT_MARRIAGE_HISTORY
}

func (x *User) GetEducation() Education {
	if x != nil {
		return x.Education
	}
	return Education_UNIFIED_BACHELOR
}

func (x *User) GetUniversity() string {
	if x != nil {
		return x.University
	}
	return ""
}

func (x *User) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *User) GetWechatNumber() string {
	if x != nil {
		return x.WechatNumber
	}
	return ""
}

func (x *User) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

//数据量
type Count struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//应征数量
	Enlist int32 `protobuf:"varint,1,opt,name=enlist,proto3" json:"enlist,omitempty"`
	//应征者数量
	Enlisted int32 `protobuf:"varint,2,opt,name=enlisted,proto3" json:"enlisted,omitempty"`
	//我的活动数量
	Activity int32 `protobuf:"varint,3,opt,name=activity,proto3" json:"activity,omitempty"`
}

func (x *Count) Reset() {
	*x = Count{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Count) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Count) ProtoMessage() {}

func (x *Count) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Count.ProtoReflect.Descriptor instead.
func (*Count) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{32}
}

func (x *Count) GetEnlist() int32 {
	if x != nil {
		return x.Enlist
	}
	return 0
}

func (x *Count) GetEnlisted() int32 {
	if x != nil {
		return x.Enlisted
	}
	return 0
}

func (x *Count) GetActivity() int32 {
	if x != nil {
		return x.Activity
	}
	return 0
}

//轮播图
type Swiper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//图片地址
	Img string `protobuf:"bytes,1,opt,name=img,proto3" json:"img,omitempty"`
	//超链接地址
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Swiper) Reset() {
	*x = Swiper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Swiper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Swiper) ProtoMessage() {}

func (x *Swiper) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Swiper.ProtoReflect.Descriptor instead.
func (*Swiper) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{33}
}

func (x *Swiper) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *Swiper) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

//活动详情
type Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//活动ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	//标签
	Label []string `protobuf:"bytes,3,rep,name=label,proto3" json:"label,omitempty"`
	//价格
	Price float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	//时间戳
	Time string `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	//
	Location string `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	//小图
	SmallImg string `protobuf:"bytes,7,opt,name=small_img,json=smallImg,proto3" json:"small_img,omitempty"`
	// 大图
	BigImg string `protobuf:"bytes,8,opt,name=big_img,json=bigImg,proto3" json:"big_img,omitempty"`
	//描述
	Description string `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	//活动序列号
	ActivitySerial string `protobuf:"bytes,10,opt,name=activitySerial,proto3" json:"activitySerial,omitempty"`
	//创建时间
	CreatedAt int64 `protobuf:"varint,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt int64 `protobuf:"varint,12,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Activity) Reset() {
	*x = Activity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{34}
}

func (x *Activity) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Activity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Activity) GetLabel() []string {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *Activity) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Activity) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *Activity) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Activity) GetSmallImg() string {
	if x != nil {
		return x.SmallImg
	}
	return ""
}

func (x *Activity) GetBigImg() string {
	if x != nil {
		return x.BigImg
	}
	return ""
}

func (x *Activity) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Activity) GetActivitySerial() string {
	if x != nil {
		return x.ActivitySerial
	}
	return ""
}

func (x *Activity) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Activity) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

//订单
type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//序列号
	OrderSerial string `protobuf:"bytes,1,opt,name=orderSerial,proto3" json:"orderSerial,omitempty"`
	//关联的活动序列号
	ActivitySerial string `protobuf:"bytes,2,opt,name=activitySerial,proto3" json:"activitySerial,omitempty"`
	//时间戳
	Timestamp int64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	//状态。分为待付款，已付款，已退款
	Status string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{35}
}

func (x *Order) GetOrderSerial() string {
	if x != nil {
		return x.OrderSerial
	}
	return ""
}

func (x *Order) GetActivitySerial() string {
	if x != nil {
		return x.ActivitySerial
	}
	return ""
}

func (x *Order) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Order) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

//活动列表数据
type QuerySwipersResp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 活动列表
	SwiperList []*Swiper `protobuf:"bytes,5,rep,name=swiperList,proto3" json:"swiperList,omitempty"`
}

func (x *QuerySwipersResp_Data) Reset() {
	*x = QuerySwipersResp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySwipersResp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySwipersResp_Data) ProtoMessage() {}

func (x *QuerySwipersResp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySwipersResp_Data.ProtoReflect.Descriptor instead.
func (*QuerySwipersResp_Data) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{12, 0}
}

func (x *QuerySwipersResp_Data) GetSwiperList() []*Swiper {
	if x != nil {
		return x.SwiperList
	}
	return nil
}

type WXLoginResp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//    //用户唯一标识
	//   string openId  = 1;
	//   //会话密钥
	//   string sessionKey = 2;
	//   //用户在开放平台的唯一标识符，若当前小程序已绑定到微信开放平台帐号下会返回，详见 UnionID 机制说明。
	//   string unionId = 3;
	//TOKEN
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *WXLoginResp_Data) Reset() {
	*x = WXLoginResp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WXLoginResp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WXLoginResp_Data) ProtoMessage() {}

func (x *WXLoginResp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WXLoginResp_Data.ProtoReflect.Descriptor instead.
func (*WXLoginResp_Data) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{22, 0}
}

func (x *WXLoginResp_Data) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

//活动列表数据
type QueryOrderListResp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 当前页记录数
	Size int32 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	// 总页数
	Pages int32 `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
	// 本次请求结果实际页码, 一般与请求参数一致
	PageNum int32 `protobuf:"varint,3,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	// 分页大小
	PageSize  int32    `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderList []*Order `protobuf:"bytes,5,rep,name=orderList,proto3" json:"orderList,omitempty"`
	// 查询命中的对象总数, 请求参数trackTotalHits为真时生效, 否则返回-1
	Total int32 `protobuf:"varint,6,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *QueryOrderListResp_Data) Reset() {
	*x = QueryOrderListResp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderListResp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderListResp_Data) ProtoMessage() {}

func (x *QueryOrderListResp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderListResp_Data.ProtoReflect.Descriptor instead.
func (*QueryOrderListResp_Data) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{24, 0}
}

func (x *QueryOrderListResp_Data) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *QueryOrderListResp_Data) GetPages() int32 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *QueryOrderListResp_Data) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryOrderListResp_Data) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryOrderListResp_Data) GetOrderList() []*Order {
	if x != nil {
		return x.OrderList
	}
	return nil
}

func (x *QueryOrderListResp_Data) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

//活动列表数据
type QueryActivityListByDayResp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 当前页记录数
	Size int32 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	// 总页数
	Pages int32 `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
	// 本次请求结果实际页码, 一般与请求参数一致
	PageNum int32 `protobuf:"varint,3,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	// 分页大小
	PageSize int32 `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	// 活动列表
	ActivityList []*Activity `protobuf:"bytes,5,rep,name=activityList,proto3" json:"activityList,omitempty"`
	// 查询命中的对象总数, 请求参数trackTotalHits为真时生效, 否则返回-1
	Total int32 `protobuf:"varint,6,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *QueryActivityListByDayResp_Data) Reset() {
	*x = QueryActivityListByDayResp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryActivityListByDayResp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryActivityListByDayResp_Data) ProtoMessage() {}

func (x *QueryActivityListByDayResp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryActivityListByDayResp_Data.ProtoReflect.Descriptor instead.
func (*QueryActivityListByDayResp_Data) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{28, 0}
}

func (x *QueryActivityListByDayResp_Data) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *QueryActivityListByDayResp_Data) GetPages() int32 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *QueryActivityListByDayResp_Data) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryActivityListByDayResp_Data) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryActivityListByDayResp_Data) GetActivityList() []*Activity {
	if x != nil {
		return x.ActivityList
	}
	return nil
}

func (x *QueryActivityListByDayResp_Data) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

//活动列表数据
type QueryActivityListResp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 当前页记录数
	Size int32 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	// 总页数
	Pages int32 `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
	// 本次请求结果实际页码, 一般与请求参数一致
	PageNum int32 `protobuf:"varint,3,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	// 分页大小
	PageSize int32 `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	// 活动列表
	ActivityList []*Activity `protobuf:"bytes,5,rep,name=activityList,proto3" json:"activityList,omitempty"`
	// 查询命中的对象总数, 请求参数trackTotalHits为真时生效, 否则返回-1
	Total int32 `protobuf:"varint,6,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *QueryActivityListResp_Data) Reset() {
	*x = QueryActivityListResp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reservation_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryActivityListResp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryActivityListResp_Data) ProtoMessage() {}

func (x *QueryActivityListResp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reservation_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryActivityListResp_Data.ProtoReflect.Descriptor instead.
func (*QueryActivityListResp_Data) Descriptor() ([]byte, []int) {
	return file_proto_reservation_proto_rawDescGZIP(), []int{30, 0}
}

func (x *QueryActivityListResp_Data) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *QueryActivityListResp_Data) GetPages() int32 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *QueryActivityListResp_Data) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryActivityListResp_Data) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryActivityListResp_Data) GetActivityList() []*Activity {
	if x != nil {
		return x.ActivityList
	}
	return nil
}

func (x *QueryActivityListResp_Data) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_proto_reservation_proto protoreflect.FileDescriptor

var file_proto_reservation_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5, 0x04,
	0x0a, 0x0b, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a,
	0x09, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x68, 0x65, 0x61, 0x64, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06,
	0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x23, 0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x74, 0x6f,
	0x77, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x74, 0x6f, 0x77, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x0f, 0x65, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0f,
	0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x34, 0x0a, 0x09, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x64, 0x75, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x63, 0x63, 0x75, 0x70,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x62, 0x0a, 0x0c, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x21, 0x0a, 0x0f, 0x4a, 0x6f, 0x69,
	0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7c, 0x0a, 0x10,
	0x4a, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x12, 0x0a, 0x10, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x22, 0x9a,
	0x01, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x11, 0x0a, 0x0f, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x22, 0x63,
	0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x25, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x8f, 0x01, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x99, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x35, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x65, 0x6e, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x65, 0x6e, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x65, 0x6e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x65, 0x6e, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x64, 0x22, 0x26, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x77, 0x69, 0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x22, 0xdb, 0x01, 0x0a,
	0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x77, 0x69, 0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x53, 0x77, 0x69, 0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x1a, 0x3b, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x0a, 0x73, 0x77, 0x69, 0x70, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x77, 0x69, 0x70, 0x65, 0x72, 0x52, 0x0a,
	0x73, 0x77, 0x69, 0x70, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x15, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x73, 0x67, 0x22, 0x22, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x42, 0x54, 0x49,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x42, 0x54, 0x49, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x42, 0x54, 0x49, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x80, 0x01, 0x0a, 0x0a, 0x4d,
	0x42, 0x54, 0x49, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0c, 0x65, 0x78, 0x74, 0x72, 0x61, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07,
	0x73, 0x65, 0x6e, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x69, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x74, 0x68, 0x69, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6a, 0x75, 0x64, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6a, 0x75, 0x64, 0x67, 0x69, 0x6e, 0x67, 0x22, 0x11, 0x0a,
	0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x42, 0x54, 0x49, 0x52, 0x65, 0x71,
	0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x42, 0x54, 0x49,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x0d, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x22, 0x62, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x71, 0x0a, 0x0a, 0x57, 0x58, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x2d, 0x0a, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x76, 0x22, 0xb2, 0x01, 0x0a, 0x0b, 0x57,
	0x58, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x57, 0x58, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73,
	0x67, 0x1a, 0x1c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x30, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x22, 0xd3, 0x02, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x1a, 0xae, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x30, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x22, 0xc5, 0x01, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x64, 0x4d, 0x62,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65,
	0x64, 0x4d, 0x62, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x62, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x62, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x62, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x62, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x73, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x73, 0x67, 0x22, 0x63, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x44, 0x61, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64,
	0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xec, 0x02, 0x0a, 0x1a, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79,
	0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x1a, 0xb7, 0x01,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x16, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22,
	0xe2, 0x02, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x1a, 0xb7, 0x01, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x81, 0x04, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x74, 0x6f, 0x77, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x74, 0x6f, 0x77, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x0f, 0x65, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x0f, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65,
	0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x57, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x65, 0x6e, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x6e, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x22, 0x2c, 0x0a, 0x06, 0x53, 0x77, 0x69, 0x70, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x6d, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22,
	0xc6, 0x02, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x6d, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x69, 0x67,
	0x5f, 0x69, 0x6d, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x69, 0x67, 0x49,
	0x6d, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x05, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2a, 0xb6, 0x01, 0x0a, 0x09, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x42, 0x41, 0x43, 0x48,
	0x45, 0x4c, 0x4f, 0x52, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x41, 0x52, 0x54, 0x5f, 0x54,
	0x49, 0x4d, 0x45, 0x5f, 0x42, 0x41, 0x43, 0x48, 0x45, 0x4c, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x18,
	0x0a, 0x14, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x4f, 0x52, 0x4d, 0x45, 0x44, 0x5f, 0x42, 0x41,
	0x43, 0x48, 0x45, 0x4c, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x55, 0x4c, 0x4c,
	0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x4d, 0x41, 0x53, 0x54, 0x45, 0x52, 0x10, 0x03, 0x12, 0x14,
	0x0a, 0x10, 0x50, 0x41, 0x52, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x4d, 0x41, 0x53, 0x54,
	0x45, 0x52, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x55, 0x4c, 0x4c, 0x5f, 0x54, 0x49, 0x4d,
	0x45, 0x5f, 0x44, 0x4f, 0x43, 0x54, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x41,
	0x52, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x44, 0x4f, 0x43, 0x54, 0x4f, 0x52, 0x10, 0x06,
	0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x07, 0x2a, 0x4f, 0x0a, 0x0f, 0x45,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23,
	0x0a, 0x1f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x4f, 0x55, 0x54,
	0x5f, 0x4d, 0x41, 0x52, 0x52, 0x49, 0x41, 0x47, 0x45, 0x5f, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52,
	0x59, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x41, 0x4e,
	0x44, 0x5f, 0x44, 0x49, 0x56, 0x4f, 0x52, 0x43, 0x45, 0x44, 0x10, 0x01, 0x2a, 0x1e, 0x0a, 0x06,
	0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x41, 0x4c, 0x45, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45, 0x10, 0x01, 0x32, 0xfb, 0x0b, 0x0a,
	0x12, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x6b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x5d, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12,
	0x59, 0x0a, 0x08, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x65, 0x64, 0x69, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x66, 0x0a, 0x0d, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x66, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x5a, 0x0a, 0x07, 0x57, 0x58,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x17, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x57, 0x58, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x57, 0x58, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16,
	0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x77, 0x78, 0x5f, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x6e, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x4d, 0x42, 0x54, 0x49, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x42, 0x54,
	0x49, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x42, 0x54, 0x49, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6d,
	0x62, 0x74, 0x69, 0x3a, 0x01, 0x2a, 0x12, 0x44, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x42, 0x54, 0x49, 0x12, 0x19, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x42, 0x54, 0x49, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x42, 0x54, 0x49, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x0c,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x77, 0x69, 0x70, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x2e, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x53, 0x77, 0x69, 0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x77,
	0x69, 0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x73, 0x77, 0x69,
	0x70, 0x65, 0x72, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x69, 0x0a, 0x0c, 0x4a, 0x6f, 0x69, 0x6e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x3a,
	0x01, 0x2a, 0x12, 0x72, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f,
	0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x7b, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x2e, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x22,
	0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x7e, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x3a, 0x01, 0x2a, 0x12, 0x94, 0x01, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x44, 0x61, 0x79, 0x12, 0x26,
	0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79,
	0x44, 0x61, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x22, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x62, 0x79, 0x5f, 0x64, 0x61, 0x79, 0x3a, 0x01, 0x2a, 0x42, 0x1c, 0x5a, 0x1a, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_reservation_proto_rawDescOnce sync.Once
	file_proto_reservation_proto_rawDescData = file_proto_reservation_proto_rawDesc
)

func file_proto_reservation_proto_rawDescGZIP() []byte {
	file_proto_reservation_proto_rawDescOnce.Do(func() {
		file_proto_reservation_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_reservation_proto_rawDescData)
	})
	return file_proto_reservation_proto_rawDescData
}

var file_proto_reservation_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_reservation_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_proto_reservation_proto_goTypes = []interface{}{
	(Education)(0),                          // 0: reservation.Education
	(EmotionalStatus)(0),                    // 1: reservation.EmotionalStatus
	(Gender)(0),                             // 2: reservation.Gender
	(*EditUserReq)(nil),                     // 3: reservation.EditUserReq
	(*EditUserResp)(nil),                    // 4: reservation.EditUserResp
	(*JoinActivityReq)(nil),                 // 5: reservation.JoinActivityReq
	(*JoinActivityResp)(nil),                // 6: reservation.JoinActivityResp
	(*QueryUserInfoReq)(nil),                // 7: reservation.QueryUserInfoReq
	(*QueryUserInfoResp)(nil),               // 8: reservation.QueryUserInfoResp
	(*QueryDetailsReq)(nil),                 // 9: reservation.QueryDetailsReq
	(*CompleteUserData)(nil),                // 10: reservation.CompleteUserData
	(*QueryDetailsResp)(nil),                // 11: reservation.QueryDetailsResp
	(*Detail)(nil),                          // 12: reservation.Detail
	(*QueryActivityInfoReq)(nil),            // 13: reservation.QueryActivityInfoReq
	(*QuerySwipersReq)(nil),                 // 14: reservation.QuerySwipersReq
	(*QuerySwipersResp)(nil),                // 15: reservation.QuerySwipersResp
	(*QueryActivityInfoResp)(nil),           // 16: reservation.QueryActivityInfoResp
	(*QueryMBTIReq)(nil),                    // 17: reservation.QueryMBTIReq
	(*QueryMBTIResp)(nil),                   // 18: reservation.QueryMBTIResp
	(*MBTIResult)(nil),                      // 19: reservation.MBTIResult
	(*GenerateMBTIReq)(nil),                 // 20: reservation.GenerateMBTIReq
	(*GenerateMBTIResp)(nil),                // 21: reservation.GenerateMBTIResp
	(*RegisterReq)(nil),                     // 22: reservation.RegisterReq
	(*RegisterResp)(nil),                    // 23: reservation.RegisterResp
	(*WXLoginReq)(nil),                      // 24: reservation.WXLoginReq
	(*WXLoginResp)(nil),                     // 25: reservation.WXLoginResp
	(*QueryOrderListReq)(nil),               // 26: reservation.QueryOrderListReq
	(*QueryOrderListResp)(nil),              // 27: reservation.QueryOrderListResp
	(*GetSystemInfoReq)(nil),                // 28: reservation.GetSystemInfoReq
	(*GetSystemInfoResp)(nil),               // 29: reservation.GetSystemInfoResp
	(*QueryActivityListByDayReq)(nil),       // 30: reservation.QueryActivityListByDayReq
	(*QueryActivityListByDayResp)(nil),      // 31: reservation.QueryActivityListByDayResp
	(*QueryActivityListReq)(nil),            // 32: reservation.QueryActivityListReq
	(*QueryActivityListResp)(nil),           // 33: reservation.QueryActivityListResp
	(*User)(nil),                            // 34: reservation.User
	(*Count)(nil),                           // 35: reservation.Count
	(*Swiper)(nil),                          // 36: reservation.Swiper
	(*Activity)(nil),                        // 37: reservation.Activity
	(*Order)(nil),                           // 38: reservation.Order
	(*QuerySwipersResp_Data)(nil),           // 39: reservation.QuerySwipersResp.Data
	(*WXLoginResp_Data)(nil),                // 40: reservation.WXLoginResp.Data
	(*QueryOrderListResp_Data)(nil),         // 41: reservation.QueryOrderListResp.Data
	(*QueryActivityListByDayResp_Data)(nil), // 42: reservation.QueryActivityListByDayResp.Data
	(*QueryActivityListResp_Data)(nil),      // 43: reservation.QueryActivityListResp.Data
}
var file_proto_reservation_proto_depIdxs = []int32{
	2,  // 0: reservation.EditUserReq.gender:type_name -> reservation.Gender
	1,  // 1: reservation.EditUserReq.emotionalStatus:type_name -> reservation.EmotionalStatus
	0,  // 2: reservation.EditUserReq.education:type_name -> reservation.Education
	10, // 3: reservation.QueryUserInfoResp.data:type_name -> reservation.CompleteUserData
	34, // 4: reservation.CompleteUserData.user:type_name -> reservation.User
	35, // 5: reservation.CompleteUserData.count:type_name -> reservation.Count
	12, // 6: reservation.QueryDetailsResp.data:type_name -> reservation.Detail
	37, // 7: reservation.Detail.activities:type_name -> reservation.Activity
	34, // 8: reservation.Detail.enlist:type_name -> reservation.User
	34, // 9: reservation.Detail.enlisted:type_name -> reservation.User
	39, // 10: reservation.QuerySwipersResp.data:type_name -> reservation.QuerySwipersResp.Data
	37, // 11: reservation.QueryActivityInfoResp.data:type_name -> reservation.Activity
	19, // 12: reservation.QueryMBTIResp.data:type_name -> reservation.MBTIResult
	40, // 13: reservation.WXLoginResp.data:type_name -> reservation.WXLoginResp.Data
	41, // 14: reservation.QueryOrderListResp.data:type_name -> reservation.QueryOrderListResp.Data
	42, // 15: reservation.QueryActivityListByDayResp.data:type_name -> reservation.QueryActivityListByDayResp.Data
	43, // 16: reservation.QueryActivityListResp.data:type_name -> reservation.QueryActivityListResp.Data
	2,  // 17: reservation.User.gender:type_name -> reservation.Gender
	1,  // 18: reservation.User.emotionalStatus:type_name -> reservation.EmotionalStatus
	0,  // 19: reservation.User.education:type_name -> reservation.Education
	36, // 20: reservation.QuerySwipersResp.Data.swiperList:type_name -> reservation.Swiper
	38, // 21: reservation.QueryOrderListResp.Data.orderList:type_name -> reservation.Order
	37, // 22: reservation.QueryActivityListByDayResp.Data.activityList:type_name -> reservation.Activity
	37, // 23: reservation.QueryActivityListResp.Data.activityList:type_name -> reservation.Activity
	28, // 24: reservation.ReservationService.GetSystemInfo:input_type -> reservation.GetSystemInfoReq
	22, // 25: reservation.ReservationService.Register:input_type -> reservation.RegisterReq
	3,  // 26: reservation.ReservationService.EditUser:input_type -> reservation.EditUserReq
	7,  // 27: reservation.ReservationService.QueryUserInfo:input_type -> reservation.QueryUserInfoReq
	9,  // 28: reservation.ReservationService.QueryDetails:input_type -> reservation.QueryDetailsReq
	24, // 29: reservation.ReservationService.WXLogin:input_type -> reservation.WXLoginReq
	20, // 30: reservation.ReservationService.GenerateMBTI:input_type -> reservation.GenerateMBTIReq
	17, // 31: reservation.ReservationService.QueryMBTI:input_type -> reservation.QueryMBTIReq
	14, // 32: reservation.ReservationService.QuerySwipers:input_type -> reservation.QuerySwipersReq
	5,  // 33: reservation.ReservationService.JoinActivity:input_type -> reservation.JoinActivityReq
	26, // 34: reservation.ReservationService.QueryOrderList:input_type -> reservation.QueryOrderListReq
	13, // 35: reservation.ReservationService.QueryActivityInfo:input_type -> reservation.QueryActivityInfoReq
	32, // 36: reservation.ReservationService.QueryActivityList:input_type -> reservation.QueryActivityListReq
	30, // 37: reservation.ReservationService.QueryActivityListByDay:input_type -> reservation.QueryActivityListByDayReq
	29, // 38: reservation.ReservationService.GetSystemInfo:output_type -> reservation.GetSystemInfoResp
	23, // 39: reservation.ReservationService.Register:output_type -> reservation.RegisterResp
	4,  // 40: reservation.ReservationService.EditUser:output_type -> reservation.EditUserResp
	8,  // 41: reservation.ReservationService.QueryUserInfo:output_type -> reservation.QueryUserInfoResp
	11, // 42: reservation.ReservationService.QueryDetails:output_type -> reservation.QueryDetailsResp
	25, // 43: reservation.ReservationService.WXLogin:output_type -> reservation.WXLoginResp
	21, // 44: reservation.ReservationService.GenerateMBTI:output_type -> reservation.GenerateMBTIResp
	18, // 45: reservation.ReservationService.QueryMBTI:output_type -> reservation.QueryMBTIResp
	15, // 46: reservation.ReservationService.QuerySwipers:output_type -> reservation.QuerySwipersResp
	6,  // 47: reservation.ReservationService.JoinActivity:output_type -> reservation.JoinActivityResp
	27, // 48: reservation.ReservationService.QueryOrderList:output_type -> reservation.QueryOrderListResp
	16, // 49: reservation.ReservationService.QueryActivityInfo:output_type -> reservation.QueryActivityInfoResp
	33, // 50: reservation.ReservationService.QueryActivityList:output_type -> reservation.QueryActivityListResp
	31, // 51: reservation.ReservationService.QueryActivityListByDay:output_type -> reservation.QueryActivityListByDayResp
	38, // [38:52] is the sub-list for method output_type
	24, // [24:38] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_proto_reservation_proto_init() }
func file_proto_reservation_proto_init() {
	if File_proto_reservation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_reservation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinActivityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinActivityResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteUserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDetailsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Detail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryActivityInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySwipersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySwipersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryActivityInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMBTIReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMBTIResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MBTIResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateMBTIReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateMBTIResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WXLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WXLoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryActivityListByDayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryActivityListByDayResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryActivityListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryActivityListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Count); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Swiper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySwipersResp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WXLoginResp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderListResp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryActivityListByDayResp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reservation_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryActivityListResp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_reservation_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_reservation_proto_goTypes,
		DependencyIndexes: file_proto_reservation_proto_depIdxs,
		EnumInfos:         file_proto_reservation_proto_enumTypes,
		MessageInfos:      file_proto_reservation_proto_msgTypes,
	}.Build()
	File_proto_reservation_proto = out.File
	file_proto_reservation_proto_rawDesc = nil
	file_proto_reservation_proto_goTypes = nil
	file_proto_reservation_proto_depIdxs = nil
}
